{"version":3,"file":"main.js","mappings":"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","sources":["webpack://openui/./server/crud/crud.ctrl.js","webpack://openui/./server/crud/crud.model.js","webpack://openui/./server/crud/crud.router.js","webpack://openui/./server/db.js","webpack://openui/./server/generators/console/log.js","webpack://openui/./server/generators/http/HttpResponse.js","webpack://openui/./server/generators/schema/schema.router.js","webpack://openui/./server/generators/schema/schemaType.js","webpack://openui/./server/generators/schema/validation.js","webpack://openui/./server/generators/ws/WSResponse.js","webpack://openui/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://openui/external \"@babel/runtime/helpers/classCallCheck\"","webpack://openui/external \"@babel/runtime/helpers/createClass\"","webpack://openui/external \"@babel/runtime/helpers/defineProperty\"","webpack://openui/external \"@babel/runtime/helpers/slicedToArray\"","webpack://openui/external \"@babel/runtime/helpers/typeof\"","webpack://openui/external \"@babel/runtime/regenerator\"","webpack://openui/external \"chalk\"","webpack://openui/external \"child_process\"","webpack://openui/external \"cors\"","webpack://openui/external \"express\"","webpack://openui/external \"express-ws\"","webpack://openui/external \"mongoose\"","webpack://openui/webpack/bootstrap","webpack://openui/webpack/runtime/compat get default export","webpack://openui/webpack/runtime/define property getters","webpack://openui/webpack/runtime/global","webpack://openui/webpack/runtime/hasOwnProperty shorthand","webpack://openui/webpack/runtime/make namespace object","webpack://openui/./server/index.safe.js"],"sourcesContent":["import express from 'express';\nimport HttpResponse from '../generators/http/HttpResponse';\nimport WSResponse from '../generators/ws/WSResponse';\nimport createModel from './crud.model';\n\nfunction crudCtrl(route, wsInfo) {\n    const router = express.Router();\n    const model = createModel(route);\n\n    // Broadcast json response by ws\n    const wsJsonBroadCast = (method = 'get', status = 200, data = null, message = 'ok') => {\n        WSResponse.jsonBroadCast(wsInfo, status, data, message, route.name, method);\n    }\n\n    // ===== HTTP HANDLING =====\n    router.get('/', async (req, res) => {\n        const httpResponse = new HttpResponse(res, route.name);\n        try {\n            const data = await model.find({ ...req.query });\n            httpResponse.json(200, data);\n        } catch (e) {\n            httpResponse.json(500, null, 'Unable to read data');\n        }\n    });\n\n    router.get('/:id', async (req, res) => {\n        const httpResponse = new HttpResponse(res, route.name + '/' + req.params.id);\n        try {\n            const data = await model.findById(req.params.id)\n            if (!data) {\n                httpResponse.json(404, null, 'Resource not found.')\n            } else {\n                httpResponse.json(200, data);\n            }\n        } catch (e) {\n            httpResponse.json(500, null, e.message);\n        }\n    });\n\n    router.post('/', async (req, res) => {\n        const httpResponse = new HttpResponse(res, route.name + '/' + req.params.id);\n        try {\n            const newData = new model({ ...req.body });\n            console.log(req.body, newData);\n            await newData.save();\n            httpResponse.json(201, newData, 'Item created!');\n        } catch (e) {\n            httpResponse.json(201, null, e.message);\n        }\n    });\n\n    router.put('/:id', async (req, res) => {\n        delete req.body._id;\n        try {\n            await model.updateOne({ _id: req.params.id }, { ...req.body })\n            res.status(200).json({ message: 'Item Updated!' });\n        } catch (e) {\n            res.status(422).json(e)\n        }\n    });\n\n    router.delete('/:id', async (req, res) => {\n        try {\n            await model.deleteOne({ _id: req.params.id })\n            res.status(200).json({ message: 'Item deleted!' });\n        } catch (e) {\n            res.status(422).json(e)\n        }\n    });\n    // ===== END HTTP HANDLING =====\n\n\n    // ===== Web Socket HANDLING =====\n    router.ws('/post', (ws, req) => {\n        ws.on('message', async msg => {\n            try {\n                const newData = new model(JSON.parse(msg));\n                await newData.save();\n                console.log(newData);\n                wsJsonBroadCast('post', 200, {\n                    route: route.name,\n                    posted: newData\n                });\n            } catch (e) {\n                wsJsonBroadCast('post', 500, null, e.message)\n            }\n        });\n    });\n\n    router.ws('/put', (ws, req) => {\n        ws.on('message', async msg => {\n            try {\n                const value = JSON.parse(msg);\n                const id = value.id;\n                delete value.id;\n                await model.updateOne({ _id: id }, value);\n                const updated = await model.findOne({ _id: id });\n                wsJsonBroadCast('put', 200, {\n                    route: route.name,\n                    updated\n                });\n            } catch (e) {\n                wsJsonBroadCast('put', 422, null, e.message);\n            }\n        });\n    });\n\n    router.ws('/delete', (ws, req) => {\n        ws.on('message', async (msg) => {\n            try {\n                await model.deleteOne({ _id: JSON.parse(msg).id });\n                wsJsonBroadCast('delete', 200, {\n                    route: route.name,\n                    deletedId: JSON.parse(msg).id\n                });\n            } catch (e) {\n                wsJsonBroadCast('delete', 422, null, e.message);\n            }\n        });\n    });\n    // ===== END WS HANDLING====\n\n    return router;\n}\nexport default crudCtrl;","import mongoose from 'mongoose'\nimport generateMongoSchema from '../generators/schema/validation';\n\nexport default function createModel(route) {\n    return mongoose.model(route.name, generateMongoSchema(route.schema))\n}","import crudCtrl from \"./crud.ctrl\";\nimport db from \"../db\";\n\nconst dbValues = Object.entries(db);\n\nconst routes = dbValues.map(it => ({ name: it[0], schema: it[1] }));\n\nfunction createCrudRouter(app, wsInfo) {\n    for (const r of routes) {\n        app.use('/api/' + r.name, crudCtrl(r, wsInfo))\n    }\n    \n}\n\nexport default createCrudRouter;","import './generators/schema/schemaType';\n\nexport const MONGO_URI = 'mongodb://localhost/test_db';\n\nexport default {\n    users: {\n        email: Email,\n        password: Password,\n        name: {\n            required: true,\n            type: Text,\n            minLength: 4\n        }\n    },\n    posts: {\n        author: {\n            type: ObjectId,\n            ref: 'users'\n        },\n        message: Text,\n        at: Date,\n        likes: Number\n    }\n};","import chalk from 'chalk';\nconst logger = console.log;\n\nexport default {\n    error: (info, code = null) => logger(chalk.red.bold(`${code ? code : 'ERROR'}`, info)),\n    success: info => logger(chalk.green('[SUCCESS]',info)),\n    info: (data, type = '[i]') => logger(chalk.gray.bold(`${type}`, data)),\n    warning: info => logger(chalk.yellowBright.bold('[WARNING]', info)),\n    strong: info => logger(chalk.blueBright.bold('[*]', info)),\n    input: info => logger(chalk.blueBright(`${info} : `))\n};","import log from \"../console/log\";\n\nexport default class HttpResponse {\n    constructor(res, route, method = 'GET') {\n        this.response = res;\n        this.route = route;\n        this.method = method;\n    }\n\n    /**\n     * Provide the appropriate response object after a request\n     * @param {number} status Response status code\n     * @param {string} message Response message text\n     * @param {object} data Response content object\n     */\n    json(status = 200, data = null, message = 'ok') {\n\n        if (status > 300) {\n            log.error(`[${this.method.toUpperCase()}] /${this.route} : ${message}`, status);\n        } else {\n            log.info(`[${this.method.toUpperCase()}] /${this.route} : Data sent with success`, status);\n        }\n\n        return this.response.status(status).json({\n            status,\n            message,\n            data\n        });\n    }\n}\n","import express from 'express';\nimport db from '../../db';\nimport HttpResponse from '../http/HttpResponse';\nimport mongoose from 'mongoose';\n\nfunction stringifyAttribute(schema) {\n    const newSchema = {};\n    const _TYPES_ = {\n        'Date': Date,\n        'Number': Number,\n        'Boolean': Boolean,\n        'ObjectId': mongoose.Types.ObjectId,\n    };\n    for (const attr in schema) {\n        let founded = false;\n        for (const subAttr in _TYPES_) {\n            if (schema[attr] === _TYPES_[subAttr]) {\n                newSchema[attr] = subAttr;\n                founded = true;\n                break;\n            } else {\n                if (schema[attr].type && schema[attr].type === _TYPES_[subAttr]) {\n                    newSchema[attr] = { ...schema[attr], type: subAttr };\n                    founded = true;\n                    break;\n                }\n            }\n        }\n        if (!founded) {\n            newSchema[attr] = schema[attr];\n        }\n    }\n    return newSchema;\n}\n\nfunction stringifySchema(schema) {\n    const newSchema = {};\n    for (const attr in schema) {\n        newSchema[attr] = stringifyAttribute(schema[attr]);\n    }\n    return newSchema;\n}\n\n\nfunction createSchemaRouter(app) {\n    const router = express.Router();\n\n    router.get('/', (req, res) => {\n        const httpResponse = new HttpResponse(res, 'schema');\n        httpResponse.json(200, stringifySchema(db));\n    });\n\n    router.get('/:name', (req, res) => {\n        const name = req.params.name;\n        const httpResponse = new HttpResponse(res, 'schema/' + name);\n        if (!(name in db)) {\n            httpResponse.json(404, null, 'The collection name provided does not exists');\n        } else {\n            httpResponse.json(200, db[name]);\n        }\n    });\n\n    app.use('/api/schema', router);\n}\n\nexport default createSchemaRouter;","import mongoose from 'mongoose';\n\nglobal.Text = 'Text'; // Store String that correspond to mongo String dataType\nglobal.Email = 'Email'; // Store email \nglobal.Password = 'Password'; // Store password \nglobal.File = 'File'; // Store file but it uploadUrl in mongo db,\nglobal.Date = Date;\nglobal.Number = Number;\nglobal.Boolean = Boolean;\nglobal.ObjectId = mongoose.Types.ObjectId;\n\nexport default {}; ","import mongoose from 'mongoose';\nconst { Schema } = mongoose;\nvar validateEmail = function (email) {\n    var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return re.test(email)\n};\n\n// default email schema\nlet defaultEmailSchema = {\n    type: String,\n    trim: true,\n    //lowercase: true,\n    //unique: true,\n    //required: true,\n    validate: [validateEmail, 'Please provide a valid email address'],\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please fill a valid email address']\n}\n\n// default password schema\nlet defaultPasswordSchema = {\n    type: String,\n    match: /.{4,}/\n}\n\n// Mongoose default validations\nconst MONGOOSE_VALIDATIONS = {\n    \"STRING\": ['minlength', 'maxlength', 'match', 'enum', 'uppercase', 'lowercase', 'trim', 'required', 'validate', 'default'],\n    \"NUMBER\": ['min', 'max', 'enum', 'required', 'validate', 'default'],\n    \"DATE\": ['min', 'max', 'required', 'validate', 'default']\n}\n\n// get intersection of array\nconst arrIntersection = (arr1, arr2) => {\n    return arr1.filter(x => arr2.includes(x))\n}\n\n/**\n * \n * @param {object} ourSchema  like a mongo schema with \n * {File : input file, Text: input text, Number for input number }\n * @returns object that is mongoose schema\n */\nconst generateMongoSchema = (ourSchema) => {\n    let builtSchema = {}\n    for (const [key, value] of Object.entries(ourSchema)) {\n        if (value !== null && typeof value === 'object' && !Array.isArray(value)) {\n            builtSchema = { ...builtSchema, [key]: getSchemaFromObjectValue(value) }\n        } else if (Array.isArray(value)) {\n            builtSchema = { ...builtSchema, [key]: value }\n        } else {\n            builtSchema = { ...builtSchema, [key]: getDefaultSchema(value) }\n        }\n    }\n    return new Schema(builtSchema)\n}\n\n\nfunction getSchemaFromObjectValue(value) {\n    const type = value['type']\n    let fieldSchema = {}\n    if (type === 'Email' || type === 'Text' || type === String || type === Boolean)\n        fieldSchema = { ...value, ...getDefaultSchema(type) }\n    if (type === 'Password' || type === 'File' || type === Date) {\n        const typeUpperCase = type === Date ? 'DATE' : 'STRING';\n        fieldSchema = getDefaultSchema(type)\n        fieldSchema = { ...fieldSchema, ...foundedMongoValidation(value, typeUpperCase) }\n    }\n    if (type === mongoose.Types.ObjectId)\n        fieldSchema = { ...value }\n\n    return fieldSchema\n}\n\nfunction foundedMongoValidation(obj, type) {\n    let schema = {}\n    let validations = Object.keys(obj)\n    let foundedValidations = arrIntersection(validations, MONGOOSE_VALIDATIONS[type])\n    foundedValidations.forEach((val) => {\n        schema[val] = obj[val]\n    })\n    return schema\n}\n\nfunction getDefaultSchema(type) {\n    let defaultSchema = {}\n    switch (type) {\n        case 'Text':\n            defaultSchema = { type: String };\n            break;\n        case 'Email':\n            defaultSchema = defaultEmailSchema;\n            break;\n        case 'Password':\n            defaultSchema = defaultPasswordSchema\n            break;\n        case 'File':\n            defaultSchema = { type: String }\n            break;\n        case Number:\n            defaultSchema = { type: Number }\n            break;\n        case Date:\n            defaultSchema = { type: Date }\n            break;\n        case Boolean:\n            defaultSchema = { type: Boolean }\n            break;\n        case String:\n            defaultSchema = { type: String }\n            break;\n    }\n\n    return defaultSchema;\n}\n\nexport default generateMongoSchema;","import log from \"../console/log\";\n\nexport default class WSResponse {\n    /**\n     * @param {string} route Current route\n     * @param {string} method POST or DELETE\n     */\n    constructor(route, method) {\n        this.route = route;\n        this.method = method;\n    }\n\n    /**\n     * Provide the appropriate HTTP response object after a request\n     * @param {object} socket The client socket\n     * @param {number} status Response status code\n     * @param {string} message Response message text\n     * @param {object} data Response content object\n     */\n    json(socket, status = 200, data = null, message = 'ok') {\n\n        if (status > 300) {\n            log.error(`[WS:${this.method.toUpperCase()}] /${this.route} : ${message}`, status);\n        } else {\n            log.info(`[WS:${this.method.toUpperCase()}] /${this.route} : Data sent with success`, status);\n        }\n\n        return socket.send(JSON.stringify({\n            status,\n            message,\n            data\n        }));\n    }\n\n    /**\n     * Provide the appropriate WS response object after a request \n     * @param {object} wsInfo General app socket\n     * @param {number} status Response status code\n     * @param {string} message Response message text\n     * @param {object} data Response content object\n     */\n    static jsonBroadCast(wsInfo, status = 200, data = null, message = 'ok', route = '', method = 'GET') {\n        this.method = method;\n        wsInfo.clients.forEach(client => {\n            const response = new WSResponse(route, method);\n            response.json(client, status, data, message);\n        });\n    }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"chalk\");","module.exports = require(\"child_process\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"express-ws\");","module.exports = require(\"mongoose\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport createCrudRouter from './crud/crud.router';\nimport log from './generators/console/log';\nimport createSchemaRouter from './generators/schema/schema.router';\nimport expressWs from 'express-ws';\nimport { MONGO_URI } from './db';\nimport { execSync } from 'child_process';\n\n/* Start local mongodb server if local_db is true */\nlog.info('running safe mode')\nconst { platform } = process;\ntry {\n\tconsole.log(platform === 'linux')\n\tif (platform === 'linux') {\n\t\tlog.input('Mot de passe');\n\t\texecSync('sudo service mongod start');\n\t\tlog.success('Mongo service started sucessfully !');\n\t}\n} catch (e) {\n\tlog.error(`Unabled to start mongod service... \nPlease install mongo on your machine.`)\n}\n/* END */\n\nconst app = express();\nconst wsInfo = expressWs(app).getWss();\napp.use(cors());\napp.use(express.json());\n\nmongoose.connect(MONGO_URI, {\n\tuseNewUrlParser: true,\n\tuseUnifiedTopology: true,\n\tuseFindAndModify: false,\n\tuseCreateIndex: true\n}).catch((err) => log.error('Unable to connect to Mongo database'));\n\ncreateCrudRouter(app, wsInfo);\ncreateSchemaRouter(app);\n\nconst PORT = process.env.PORT || 3790;\napp.listen(PORT, _ => log.success('Server is started'))"],"names":["express","HttpResponse","WSResponse","createModel","crudCtrl","route","wsInfo","router","Router","model","wsJsonBroadCast","method","status","data","message","jsonBroadCast","name","get","req","res","httpResponse","find","query","json","params","id","findById","post","newData","body","console","log","save","put","_id","updateOne","deleteOne","ws","on","msg","JSON","parse","posted","value","findOne","updated","deletedId","mongoose","generateMongoSchema","schema","db","dbValues","Object","entries","routes","map","it","createCrudRouter","app","r","use","MONGO_URI","users","email","Email","password","Password","required","type","Text","minLength","posts","author","ObjectId","ref","at","Date","likes","Number","chalk","logger","error","info","code","red","bold","success","green","gray","warning","yellowBright","strong","blueBright","input","response","toUpperCase","stringifyAttribute","newSchema","_TYPES_","Boolean","Types","attr","founded","subAttr","stringifySchema","createSchemaRouter","global","File","Schema","validateEmail","re","test","defaultEmailSchema","String","trim","validate","match","defaultPasswordSchema","MONGOOSE_VALIDATIONS","arrIntersection","arr1","arr2","filter","x","includes","ourSchema","builtSchema","key","Array","isArray","getSchemaFromObjectValue","getDefaultSchema","fieldSchema","typeUpperCase","foundedMongoValidation","obj","validations","keys","foundedValidations","forEach","val","defaultSchema","socket","send","stringify","clients","client","cors","expressWs","execSync","process","platform","e","getWss","connect","useNewUrlParser","useUnifiedTopology","useFindAndModify","useCreateIndex","err","PORT","env","listen","_"],"sourceRoot":""}